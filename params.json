{"name":"FakeFamily","body":"#FAMILY GENOME SIMULATOR\r\n\r\nCopyright (C) 2011 Juan Caballero [Insitute for Systems Biology]\r\n\r\n## Quick tutorial\r\n### STEP 1. Create parental genomes\r\n`bin/personalGenome.pl -g data/hg19.fa.gz -d data/dbSNP132.var.gz -p data/CEU.var.gz -o father.var -s M`\r\n\r\n`bin/personalGenome.pl -g data/hg19.fa.gz -d data/dbSNP132.var.gz -p data/CEU.var.gz -o mother.var`\r\n\r\n\r\n### STEP 2. Artificial sex\r\n`bin/reproduction.pl -f father.var -m mother.var -c girl1.var -r data/hg19.fa.gz`\r\n\r\n`bin/reproduction.pl -f father.var -m mother.var -c boy2.var -s M`\r\n\r\n`cp boy2.var boy3.var # identical twin`\r\n\r\n### STEP 3. Add noise/error\r\n`bin/noise.pl -i father.var -o father.var.data -s M -g data/hg19.fa.gz`\r\n\r\n`bin/noise.pl -i mother.var -o mother.var.data -s F -g data/hg19.fa.gz`\r\n\r\n`bin/noise.pl -i  girl1.var -o  girl1.var.data -s F -g data/hg19.fa.gz`\r\n\r\n`bin/noise.pl -i   boy1.var -o   boy1.var.data -s M -g data/hg19.fa.gz`\r\n\r\n`bin/noise.pl -i   boy2.var -o   boy2.var.data -s M -g data/hg19.fa.gz`\r\n\r\nComplete documentation:\r\n`perldoc PROGRAM`\r\n`PROGRAM -h`\r\n`PROGRAM --help`\r\n\r\n## Description\r\n\r\nI split this problem in three steps (programs):\r\n\r\n1. Creating a personal genome (personalGenome.pl): I use three sources for the variation: 1000genomes population variations data, dbSNP and the reference genome. The total number of variations (SNPs for now) is an expected number (~3 mill) with a little noise, or you can fix the number. De novo SNPs can be added (default 1%). You can choose the sex, but for now I not modeling recombination in sexual chromosomes. In the first round it selects population-specific SNPs (~ 1mill because data comes from SNP-chips), the second round take data from dbSNP and in the last round de novo SNPs are created. I integrate diverse options and configurations (no population SNPs, no de novo, homozygous SNPs, etc) to as flexible as possible. The output is a text table with columns:\r\nCHROM POSITION REF_ALLELE ALLELE_1 ALLELE_2 ALLELE_INFO\r\n\r\n2. Artificial Sex (reproduction.pl): this script takes a personal genome from a \"father\" and a \"mother\", performs meiosis in each genome based in a distribution of recombination points and mix together to produce a \"child\". You can define the sex, total SNPs, de novo SNPs and other parameters. The output is the same:\r\nCHROM POSITION REF_ALLELE ALLELE_1 ALLELE_2 ALLELE_INFO\r\n\r\n3. Noise/Error addition (noise.pl): this part models missing SNPs, bad base calling, half-calling and false positives SNPs as error/noise.\r\n\r\nThere are some optimization I can do, each programs uses a lot of memory (~4-5 GB), because I need to load the reference genome, but are relatively fast, 5 min to produce a genome and 5 min to produce a child.","tagline":"Simulation of family genomes","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}